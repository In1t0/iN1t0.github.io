{"posts":[{"title":"VIM笔记","text":"自用的一些VIM基础配置 .vimrc123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899set nuset autoreadset clipboard+=unnamed &quot; 共享剪贴板set rulerset tabstop=4set softtabstop=4set shiftwidth=4set expandtabset mouse=asyntax on &quot; 打开语法高亮colorschem gruvboxfiletype plugin indent on&quot; 自动补全括号引号大括号回车&quot; inoremap ' ''&lt;ESC&gt;i&quot; inoremap &quot; &quot;&quot;&lt;ESC&gt;i&quot; inoremap ( ()&lt;ESC&gt;i&quot; inoremap [ []&lt;ESC&gt;iinoremap { {}&lt;ESC&gt;i&quot; inoremap {&lt;CR&gt; {&lt;CR&gt;}&lt;ESC&gt;O&quot; function! ClosePair(char)&quot; if getline('.')[col('.') - 1] == a:char&quot; return &quot;\\&lt;Right&gt;&quot;&quot; else&quot; return a:char&quot; endif&quot; endfunction&quot; 把快速按jj映射为Esc键 inoremap jj &lt;Esc&gt;&quot; Plugins will be downloaded under the specified directory.call plug#begin(has('nvim') ? stdpath('data') . '/plugged' : '~/.vim/plugged')&quot; Declare the list of plugins.Plug 'tpope/vim-sensible'Plug 'junegunn/seoul256.vim'Plug 'scrooloose/nerdtree'Plug 'scrooloose/syntastic'Plug 'vim-airline/vim-airline'Plug 'vim-airline/vim-airline-themes'Plug 'valloric/youcompleteme'Plug 'github/copilot.vim'Plug 'rust-lang/rust.vim'&quot; List ends here. Plugins become visible to Vim after this call.call plug#end()&quot; 文件导航 https://vimawesome.com/plugin/nerdtree-red&quot; NERDtree 键盘映射nnoremap &lt;leader&gt;n :NERDTreeFocus&lt;CR&gt;nnoremap &lt;C-n&gt; :NERDTree&lt;CR&gt;nnoremap &lt;C-t&gt; :NERDTreeToggle&lt;CR&gt;nnoremap &lt;C-f&gt; :NERDTreeFind&lt;CR&gt;&quot; NERDtree 自动关闭&quot; Exit Vim if NERDTree is the only window remaining in the only tab.autocmd BufEnter * if tabpagenr('$') == 1 &amp;&amp; winnr('$') == 1 &amp;&amp; exists('b:NERDTree') &amp;&amp; b:NERDTree.isTabTree() | quit | endif&quot; Close the tab if NERDTree is the only window remaining in it.autocmd BufEnter * if winnr('$') == 1 &amp;&amp; exists('b:NERDTree') &amp;&amp; b:NERDTree.isTabTree() | quit | endif&quot; 防止其他缓冲区替代NERDtree&quot; If another buffer tries to replace NERDTree, put it in the other window, and bring back NERDTree.autocmd BufEnter * if bufname('#') =~ 'NERD_tree_\\d\\+' &amp;&amp; bufname('%') !~ 'NERD_tree_\\d\\+' &amp;&amp; winnr('$') &gt; 1 | \\ let buf=bufnr() | buffer# | execute &quot;normal! \\&lt;C-W&gt;w&quot; | execute 'buffer'.buf | endif&quot; 语法高亮 https://vimawesome.com/plugin/syntastic&quot; Syntastic 配置set statusline+=%#warningmsg#set statusline+=%{SyntasticStatuslineFlag()}set statusline+=%*let g:syntastic_always_populate_loc_list = 1let g:syntastic_auto_loc_list = 1let g:syntastic_check_on_open = 1let g:syntastic_check_on_wq = 0&quot; 底部状态栏 https://vimawesome.com/plugin/vim-airline-supermanlet g:airline#extensions#tabline#enabled = 1let g:airline#extensions#tabline#formatter = 'default'&quot; 自动补全 https://vimawesome.com/plugin/youcompletemelet g:ycm_autoclose_preview_window_after_completion=1let g:ycm_autoclose_preview_window_after_insertion=1let g:ycm_confirm_extra_conf=0set completeopt-=previewautocmd InsertLeave * if pumvisible() == 0|pclose|endif &quot;离开插入模式后自动关闭预览窗口let g:ycm_seed_identifiers_with_syntax=1 &quot; 语法关键字补全let g:ycm_enable_diagnostic_signs = 1&quot; copilot插件配置imap &lt;silent&gt;&lt;script&gt;&lt;expr&gt; &lt;C-J&gt; copilot#Accept(&quot;\\&lt;CR&gt;&quot;)let g:copilot_no_tab_map = v:true&quot; copilot选择下一个提示imap &lt;silent&gt;&lt;script&gt;&lt;expr&gt; &lt;C-]&gt; copilot#Next()&quot; copilot选择上一个提示imap &lt;silent&gt;&lt;script&gt;&lt;expr&gt; &lt;C-[&gt; copilot#Prev() 列删除 光标定位到要操作的地方。 CTRL+v 进入“可视 块”模式，选取这一列操作多少行。 d 删除。 列插入插入操作的话稍有区别。例如我们在每一行前都插入”() “： 光标定位到要操作的地方。 CTRL+v 进入“可视 块”模式，选取这一列操作多少行。 SHIFT+i(I) 输入要插入的内容。 ESC 按两次，会在每行的选定的区域出现插入的内容。 列替换方法一： ctrl + v ，切换到块操作模式。 使用j. l等键进行上下左右操作，选中要替换的列。 选中之后，按下 c 键，输入要替换的内容。这个时候会看到只有第一行被键入。 按下 esc 键，退出块操作模式，这时所有列的字符都会被替换。 方法二：选区，在 Visual 模式下选择区域后输入 :，Vim 即可自动补全为 :'&lt;,'&gt;。 1:'&lt;,'&gt;s/foo/bar/g","link":"/posts/24ef6d80.html"}],"tags":[{"name":"VIM","slug":"VIM","link":"/tags/VIM/"}],"categories":[{"name":"VIM配置","slug":"VIM配置","link":"/categories/VIM%E9%85%8D%E7%BD%AE/"}],"pages":[{"title":"","text":"google-site-verification: google3cff2a5bdd6598b0.html","link":"/google3cff2a5bdd6598b0.html"},{"title":"About Me","text":"最近终于还是参加工作了。今天把工作以前的博客全部下架，准备一切从零开始。","link":"/about/index.html"},{"title":"404","text":"404 Not Found.","link":"/404.html"}]}